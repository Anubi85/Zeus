<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ForegroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Rectangle x:Name="bg" Fill="{TemplateBinding Background}"/>
                        <Border x:Name="bgBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="IconAndCheck" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="4,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                            <Border x:Name="GlyphPanel" Width="10" Height="10" Visibility="Hidden" FlowDirection="LeftToRight" Margin="4,0,0,0" VerticalAlignment="Center" >
                                <Path  Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Stretch="Fill" >
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlueColor}" />
                                    </Path.Fill>
                                </Path>
                            </Border>
                            <ContentPresenter Grid.Column="1" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ContentPresenter Grid.Column="2" Content="{TemplateBinding InputGestureText}" ContentSource="InputGestureText" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" VerticalOffset="-1">
                            <Grid SnapsToDevicePixels="True">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Border>
                                <Border x:Name="fixBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,0" HorizontalAlignment="Left" Width="{Binding Path=ActualWidth, ElementName=ItemsPresenter}" Margin="1,0" >
                                    <Border.RenderTransform>
                                        <TranslateTransform X="{Binding Path=ActualWidth, ElementName=bg}" />
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Placement" TargetName="PART_Popup" Value="Right" />
                            <Setter Property="VerticalOffset" TargetName="PART_Popup" Value="2" />
                            <Setter Property="HorizontalOffset" TargetName="PART_Popup" Value="-2" />
                            <Setter Property="Visibility" TargetName="bgBorder" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="fixBorder" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="bg" Value="1,0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="0,0" SpreadMethod="Repeat">
                            <GradientStop Color="{DynamicResource BackgroundColor}" Offset="0.8" />
                            <GradientStop Color="{DynamicResource ForegroundColor}" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource BlueColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubmenuHeader" />
                    <Condition Property="IsSubmenuOpen" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="0,0" SpreadMethod="Repeat">
                            <GradientStop Color="{DynamicResource BackgroundColor}" Offset="0.6" />
                            <GradientStop Color="{DynamicResource ForegroundColor}" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelHeader" />
                    <Condition Property="IsSubmenuOpen" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="0,0" SpreadMethod="Repeat">
                            <GradientStop Color="{DynamicResource BackgroundColor}" Offset="0.6" />
                            <GradientStop Color="{DynamicResource ForegroundColor}" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>